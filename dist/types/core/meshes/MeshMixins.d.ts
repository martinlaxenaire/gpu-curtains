import { MeshBase } from './MeshBase';
import { MixinConstructor } from './MeshBaseMixin';
import { ProjectedObject3D } from '../objects3D/ProjectedObject3D';
import { DOMObject3D } from '../../curtains/objects3D/DOMObject3D';
import { MeshTransformedBaseClass } from './MeshTransformedMixin';
type TransformedObject3D = ProjectedObject3D | DOMObject3D;
export type ProjectedMeshBaseParams<T extends TransformedObject3D> = MixinConstructor<MeshBase> & T;
export type ProjectedMeshBaseReturn<T extends TransformedObject3D> = MixinConstructor<MeshTransformedBaseClass> & T;
export declare const ProjectedMeshBaseMixinTest: <TBase extends MixinConstructor<TransformedObject3D>>(Base: TBase) => MixinConstructor<MeshTransformedBaseClass> & TBase;
export {};
