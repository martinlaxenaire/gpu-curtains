import { CameraRenderer } from '../../../renderers/utils';
import { VertexShaderInputParams } from '../vertex/get_vertex_output';
/**
 * Get default ({@link DirectionalLight}) shadow map pass vertex shader.
 * @param lightIndex - Index of the {@link DirectionalLight} for which to render the depth pass.
 * @param parameters - {@link VertexShaderInputParams} used to compute the output `worldPosition` and `normal` vectors.
 */
export declare const getDefaultShadowDepthVs: (lightIndex: number, { bindings, geometry }: VertexShaderInputParams) => string;
/** Helper chunk to get the PCF soft shadow generated by a given {@link DirectionalLight}. */
export declare const getPCFShadowContribution: string;
/**
 * Get the global PCF soft shadows contributions from all the current {@link CameraRenderer} {@link DirectionalLight}.
 * @param renderer - {@link CameraRenderer} used by the {@link DirectionalLight}.
 */
export declare const getPCFDirectionalShadows: (renderer: CameraRenderer) => string;
/**
 * Get {@link PointLight} shadow map pass vertex shader.
 * @param lightIndex - Index of the {@link PointLight} for which to render the depth pass.
 * @param parameters - {@link VertexShaderInputParams} used to compute the output `worldPosition` and `normal` vectors.
 */
export declare const getDefaultPointShadowDepthVs: (lightIndex: number, { bindings, geometry }: VertexShaderInputParams) => string;
/**
 * Get {@link PointLight} shadow map pass fragment shader.
 * @param lightIndex - Index of the {@link PointLight} for which to render the depth pass.
 */
export declare const getDefaultPointShadowDepthFs: (lightIndex?: number) => string;
/** Helper chunk to get the PCF soft shadow generated by a given {@link PointLight}. */
export declare const getPCFPointShadowContribution: string;
/**
 * Get the global PCF soft shadows contributions from all the current {@link CameraRenderer} {@link PointLight}.
 * @param renderer - {@link CameraRenderer} used by the {@link PointLight}.
 */
export declare const getPCFPointShadows: (renderer: CameraRenderer) => string;
/** Helper chunk to get the PCF soft shadow generated by all the {@link DirectionalLight} and {@link PointLight}. */
export declare const getPCFShadows: string;
/** Helper chunk to apply a given {@link DirectionalLight} shadow to its light contribution. */
export declare const applyDirectionalShadows: string;
/** Helper chunk to apply a given {@link PointLight} shadow to its light contribution. */
export declare const applyPointShadows: string;
