/** WGSL functions to calculate the indirect diffuse contribution of lights. */
export declare const REIndirectDiffuse = "\nfn getIndirectDiffuse(irradiance: vec3f, diffuseColor: vec3f, ptr_reflectedLight: ptr<function, ReflectedLight>) {\n  (*ptr_reflectedLight).indirectDiffuse += irradiance * BRDF_Lambert( diffuseColor );\n}\n\n// Indirect Diffuse RenderEquations\nfn RE_IndirectDiffuse(irradiance: vec3f, diffuseColor: vec3f, ptr_reflectedLight: ptr<function, ReflectedLight>) {\n  var totalAmbientIrradiance: vec3f = irradiance;\n  \n  for(var i: i32 = 0; i < ambientLights.count; i++) {\n    totalAmbientIrradiance += ambientLights.color[i];\n  }\n  \n  getIndirectDiffuse(totalAmbientIrradiance, diffuseColor, ptr_reflectedLight);\n}\n";
