{"version":3,"file":"ShaderChunks.mjs","sources":["../../../../src/core/shaders/ShaderChunks.ts"],"sourcesContent":["import { RenderMaterialShadersType } from '../../types/Materials'\nimport get_output_position from './chunks/get_output_position.wgsl'\nimport get_uv_cover from './chunks/get_uv_cover.wgsl'\nimport get_vertex_to_uv_coords from './chunks/get_vertex_to_uv_coords.wgsl'\n\n/** Defines {@link ShaderChunks} object structure */\nexport type ShaderChunks = Record<RenderMaterialShadersType, Record<string, string>>\n/** Defines {@link ProjectedShaderChunks} object structure */\nexport type ProjectedShaderChunks = Record<RenderMaterialShadersType, Record<string, string>>\n\n/**\n * Useful WGSL code chunks added to the vertex and/or fragment shaders\n */\nexport const ShaderChunks = {\n  /** WGSL code chunks added to the vertex shader */\n  vertex: {\n    /** Applies given texture matrix to given uv coordinates */\n    get_uv_cover,\n  },\n  /** WGSL code chunks added to the fragment shader */\n  fragment: {\n    /** Applies given texture matrix to given uv coordinates */\n    get_uv_cover,\n    /** Convert vertex position to uv coordinates */\n    get_vertex_to_uv_coords,\n  },\n} as ShaderChunks\n\n/**\n * Useful WGSL code chunks added to the projected Meshes vertex and/or fragment shaders\n */\nexport const ProjectedShaderChunks = {\n  /** WGSL code chunks added to the vertex shader */\n  vertex: {\n    /** Get output vec4f position vector by applying model view projection matrix to vec3f attribute position vector */\n    get_output_position,\n  },\n  /** WGSL code chunks added to the fragment shader */\n  fragment: {},\n} as ProjectedShaderChunks\n"],"names":[],"mappings":";;;;AAaO,MAAM,YAAe,GAAA;AAAA;AAAA,EAE1B,MAAQ,EAAA;AAAA;AAAA,IAEN,YAAA;AAAA,GACF;AAAA;AAAA,EAEA,QAAU,EAAA;AAAA;AAAA,IAER,YAAA;AAAA;AAAA,IAEA,uBAAA;AAAA,GACF;AACF,EAAA;AAKO,MAAM,qBAAwB,GAAA;AAAA;AAAA,EAEnC,MAAQ,EAAA;AAAA;AAAA,IAEN,mBAAA;AAAA,GACF;AAAA;AAAA,EAEA,UAAU,EAAC;AACb;;;;"}