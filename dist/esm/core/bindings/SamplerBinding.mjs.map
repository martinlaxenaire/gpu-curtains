{"version":3,"file":"SamplerBinding.mjs","sources":["../../../../src/core/bindings/SamplerBinding.ts"],"sourcesContent":["import { Binding, BindingParams } from './Binding'\n\n/** Defines a {@link SamplerBinding} {@link SamplerBinding#resource | resource} */\nexport type SamplerBindingResource = GPUSampler | null\n\n/**\n * An object defining all possible {@link SamplerBinding} class instancing parameters\n */\nexport interface SamplerBindingParams extends BindingParams {\n  /** {@link SamplerBinding} {@link GPUBindGroup | GPU bind group} resource */\n  sampler: SamplerBindingResource\n  /** The bind group layout binding {@link GPUSamplerBindingLayout#type | type} of this {@link GPUSampler | GPU sampler} */\n  type: GPUSamplerBindingType\n}\n\n/**\n * Used to handle GPUSampler bindings.\n *\n * Provide both {@link SamplerBinding#resourceLayout | resourceLayout} and {@link SamplerBinding#resource | resource} to the {@link GPUBindGroupLayout} and {@link GPUBindGroup}.<br>\n * Also create the appropriate WGSL code snippet to add to the shaders.\n */\nexport class SamplerBinding extends Binding {\n  /** Our {@link SamplerBinding} resource, i.e. a {@link GPUSampler} */\n  sampler: SamplerBindingResource\n  /** An array of strings to append to our shaders code declaring all the WGSL variables representing this {@link SamplerBinding} */\n  wgslGroupFragment: string[]\n  /** Options used to create this {@link SamplerBinding} */\n  options: SamplerBindingParams\n\n  /**\n   * SamplerBinding constructor\n   * @param parameters - {@link SamplerBindingParams | parameters} used to create our SamplerBindings\n   */\n  constructor({\n    label = 'Sampler',\n    name = 'sampler',\n    bindingType,\n    visibility,\n    sampler,\n    type = 'filtering',\n  }: SamplerBindingParams) {\n    bindingType = bindingType ?? 'sampler'\n\n    super({ label, name, bindingType, visibility })\n\n    this.options = {\n      ...this.options,\n      sampler,\n      type,\n    }\n\n    this.resource = sampler // should be a sampler\n\n    this.setWGSLFragment()\n  }\n\n  /**\n   * Get {@link GPUBindGroupLayoutEntry#sampler | bind group layout entry resource}\n   * @readonly\n   */\n  get resourceLayout(): {\n    /** {@link GPUBindGroupLayout | bind group layout} resource */\n    sampler: GPUSamplerBindingLayout\n  } {\n    return {\n      sampler: {\n        type: this.options.type, // TODO set shouldResetBindGroupLayout to true if it changes afterwards\n      },\n    }\n  }\n\n  /**\n   * Get the {@link GPUBindGroupEntry#resource | bind group resource}\n   */\n  get resource(): SamplerBindingResource {\n    return this.sampler\n  }\n\n  /**\n   * Set the {@link GPUBindGroupEntry#resource | bind group resource}\n   * @param value - new bind group resource\n   */\n  set resource(value: SamplerBindingResource) {\n    // resource changed, update bind group!\n    if (value && this.sampler) this.shouldResetBindGroup = true\n    this.sampler = value\n  }\n\n  /**\n   * Set the correct WGSL code snippet.\n   */\n  setWGSLFragment() {\n    this.wgslGroupFragment = [\n      `var ${this.name}: ${this.options.type === 'comparison' ? `${this.bindingType}_comparison` : this.bindingType};`,\n    ]\n  }\n}\n"],"names":[],"mappings":";;AAqBO,MAAM,uBAAuB,OAAQ,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAY1C,WAAY,CAAA;AAAA,IACV,KAAQ,GAAA,SAAA;AAAA,IACR,IAAO,GAAA,SAAA;AAAA,IACP,WAAA;AAAA,IACA,UAAA;AAAA,IACA,OAAA;AAAA,IACA,IAAO,GAAA,WAAA;AAAA,GACgB,EAAA;AACvB,IAAA,WAAA,GAAc,WAAe,IAAA,SAAA,CAAA;AAE7B,IAAA,KAAA,CAAM,EAAE,KAAA,EAAO,IAAM,EAAA,WAAA,EAAa,YAAY,CAAA,CAAA;AAE9C,IAAA,IAAA,CAAK,OAAU,GAAA;AAAA,MACb,GAAG,IAAK,CAAA,OAAA;AAAA,MACR,OAAA;AAAA,MACA,IAAA;AAAA,KACF,CAAA;AAEA,IAAA,IAAA,CAAK,QAAW,GAAA,OAAA,CAAA;AAEhB,IAAA,IAAA,CAAK,eAAgB,EAAA,CAAA;AAAA,GACvB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,cAGF,GAAA;AACA,IAAO,OAAA;AAAA,MACL,OAAS,EAAA;AAAA,QACP,IAAA,EAAM,KAAK,OAAQ,CAAA,IAAA;AAAA;AAAA,OACrB;AAAA,KACF,CAAA;AAAA,GACF;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,QAAmC,GAAA;AACrC,IAAA,OAAO,IAAK,CAAA,OAAA,CAAA;AAAA,GACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,SAAS,KAA+B,EAAA;AAE1C,IAAA,IAAI,SAAS,IAAK,CAAA,OAAA;AAAS,MAAA,IAAA,CAAK,oBAAuB,GAAA,IAAA,CAAA;AACvD,IAAA,IAAA,CAAK,OAAU,GAAA,KAAA,CAAA;AAAA,GACjB;AAAA;AAAA;AAAA;AAAA,EAKA,eAAkB,GAAA;AAChB,IAAA,IAAA,CAAK,iBAAoB,GAAA;AAAA,MACvB,CAAO,IAAA,EAAA,IAAA,CAAK,IAAI,CAAA,EAAA,EAAK,IAAK,CAAA,OAAA,CAAQ,IAAS,KAAA,YAAA,GAAe,CAAG,EAAA,IAAA,CAAK,WAAW,CAAA,WAAA,CAAA,GAAgB,KAAK,WAAW,CAAA,CAAA,CAAA;AAAA,KAC/G,CAAA;AAAA,GACF;AACF;;;;"}