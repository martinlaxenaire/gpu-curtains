{"version":3,"file":"WritableBufferBinding.mjs","sources":["../../../../src/core/bindings/WritableBufferBinding.ts"],"sourcesContent":["import { BufferBinding, BufferBindingParams } from './BufferBinding'\n\n/**\n * Parameters used to create a {@link WritableBufferBinding}\n */\nexport interface WritableBufferBindingParams extends BufferBindingParams {\n  /** Whether whe should automatically copy the {@link WritableBufferBinding#buffer | GPU buffer} content into our {@link WritableBufferBinding#resultBuffer | result GPU buffer} */\n  shouldCopyResult?: boolean\n}\n\n/**\n * Used to create a {@link BufferBinding} that can hold read/write storage bindings along with a {@link WritableBufferBinding#resultBuffer | result GPU buffer} that can be used to get data back from the GPU.\n *\n * Note that it is automatically created by the {@link core/bindGroups/BindGroup.BindGroup | BindGroup} when a {@link types/BindGroups.BindGroupInputs#storages | storages input} has its {@link BufferBindingParams#access | access} property set to `\"read_write\"`.\n */\nexport class WritableBufferBinding extends BufferBinding {\n  /** Flag indicating whether whe should automatically copy the {@link buffer | GPU buffer} content into our {@link resultBuffer | result GPU buffer} */\n  shouldCopyResult: boolean\n  /** The result GPUBuffer */\n  resultBuffer: GPUBuffer | null\n  /** Options used to create this {@link WritableBufferBinding} */\n  options: WritableBufferBindingParams\n\n  /**\n   * WritableBufferBinding constructor\n   * @param parameters - {@link WritableBufferBindingParams | parameters} used to create our {@link WritableBufferBinding}\n   */\n  constructor({\n    label = 'Work',\n    name = 'work',\n    bindingType,\n    useStruct = true,\n    struct = {},\n    visibility,\n    access = 'read_write',\n    shouldCopyResult = false,\n  }: WritableBufferBindingParams) {\n    bindingType = 'storage'\n    visibility = 'compute'\n\n    super({ label, name, bindingType, useStruct, struct: struct, visibility, access })\n\n    this.options = {\n      ...this.options,\n      shouldCopyResult,\n    }\n\n    this.shouldCopyResult = shouldCopyResult\n\n    // can be used as our buffer copy destination\n    this.resultBuffer = null\n  }\n}\n"],"names":[],"mappings":";;AAeO,MAAM,8BAA8B,aAAc,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYvD,WAAY,CAAA;AAAA,IACV,KAAQ,GAAA,MAAA;AAAA,IACR,IAAO,GAAA,MAAA;AAAA,IACP,WAAA;AAAA,IACA,SAAY,GAAA,IAAA;AAAA,IACZ,SAAS,EAAC;AAAA,IACV,UAAA;AAAA,IACA,MAAS,GAAA,YAAA;AAAA,IACT,gBAAmB,GAAA,KAAA;AAAA,GACW,EAAA;AAC9B,IAAc,WAAA,GAAA,SAAA,CAAA;AACd,IAAa,UAAA,GAAA,SAAA,CAAA;AAEb,IAAM,KAAA,CAAA,EAAE,OAAO,IAAM,EAAA,WAAA,EAAa,WAAW,MAAgB,EAAA,UAAA,EAAY,QAAQ,CAAA,CAAA;AAEjF,IAAA,IAAA,CAAK,OAAU,GAAA;AAAA,MACb,GAAG,IAAK,CAAA,OAAA;AAAA,MACR,gBAAA;AAAA,KACF,CAAA;AAEA,IAAA,IAAA,CAAK,gBAAmB,GAAA,gBAAA,CAAA;AAGxB,IAAA,IAAA,CAAK,YAAe,GAAA,IAAA,CAAA;AAAA,GACtB;AACF;;;;"}