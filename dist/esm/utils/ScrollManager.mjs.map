{"version":3,"file":"ScrollManager.mjs","sources":["../../../src/utils/ScrollManager.ts"],"sourcesContent":["import { DOMPosition } from '../core/DOM/DOMElement'\n\n/**\n * Parameters used to create a {@link ScrollManager}\n */\nexport interface ScrollManagerParams {\n  /** Current scroll position */\n  scroll?: DOMPosition\n  /** Last scroll deltas */\n  delta?: DOMPosition\n  /** Whether the {@link ScrollManager} should listen to the window scroll event or not */\n  shouldWatch?: boolean\n  /** Callback to execute each time the {@link ScrollManager#scroll | scroll} values change */\n  onScroll?: (delta?: DOMPosition) => void\n}\n\n/**\n * Used to keep track of our scroll position, scroll deltas and trigger an onScroll callback.<br>\n * Could either listen to the native scroll event or be hooked to any scroll (natural or virtual) scroll event\n */\nexport class ScrollManager {\n  /** Current scroll position */\n  scroll: DOMPosition\n  /** Last scroll deltas */\n  delta: DOMPosition\n  /** Whether the {@link ScrollManager} should listen to the window scroll event or not */\n  shouldWatch: boolean\n  /** Callback to execute each time the {@link scroll} values change */\n  onScroll: (delta?: DOMPosition) => void\n\n  /**\n   * ScrollManager constructor\n   * @param parameters - {@link ScrollManagerParams | parameters} used to create this {@link ScrollManager}\n   */\n  constructor({\n    scroll = { x: 0, y: 0 },\n    delta = { x: 0, y: 0 },\n    shouldWatch = true,\n    onScroll = (delta: DOMPosition = { x: 0, y: 0 }) => {\n      /* allow empty callback */\n    },\n  }: ScrollManagerParams = {}) {\n    this.scroll = scroll\n    this.delta = delta\n\n    this.shouldWatch = shouldWatch\n\n    this.onScroll = onScroll\n\n    if (this.shouldWatch) {\n      window.addEventListener('scroll', this.setScroll.bind(this), { passive: true })\n    }\n  }\n\n  /**\n   * Called by the scroll event listener\n   */\n  setScroll() {\n    this.updateScrollValues({ x: window.pageXOffset, y: window.pageYOffset })\n  }\n\n  /**\n   * Updates the scroll manager X and Y scroll values as well as last X and Y deltas\n   * Internally called by the scroll event listener\n   * Could be called externally as well if the user wants to handle the scroll by himself\n   * @param parameters - {@link core/DOM/DOMElement.DOMPosition | scroll values}\n   */\n  updateScrollValues({ x, y }: DOMPosition) {\n    // get our scroll delta values\n    const lastScroll = this.scroll\n    this.scroll = { x, y }\n    this.delta = {\n      x: lastScroll.x - this.scroll.x,\n      y: lastScroll.y - this.scroll.y,\n    }\n\n    if (this.onScroll) {\n      this.onScroll(this.delta)\n    }\n  }\n\n  /**\n   * Destroy our scroll manager (just remove our event listner if it had been added previously)\n   */\n  destroy() {\n    if (this.shouldWatch) {\n      // passive triggers a typescript error\n      // https://github.com/microsoft/TypeScript/issues/32912#issuecomment-522142969\n      window.removeEventListener('scroll', this.setScroll.bind(this), { passive: true } as AddEventListenerOptions &\n        EventListenerOptions)\n    }\n  }\n}\n"],"names":["delta"],"mappings":"AAoBO,MAAM,aAAc,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAczB,WAAY,CAAA;AAAA,IACV,MAAS,GAAA,EAAE,CAAG,EAAA,CAAA,EAAG,GAAG,CAAE,EAAA;AAAA,IACtB,KAAQ,GAAA,EAAE,CAAG,EAAA,CAAA,EAAG,GAAG,CAAE,EAAA;AAAA,IACrB,WAAc,GAAA,IAAA;AAAA,IACd,QAAA,GAAW,CAACA,MAAqB,GAAA,EAAE,GAAG,CAAG,EAAA,CAAA,EAAG,GAAQ,KAAA;AAAA,KAEpD;AAAA,GACF,GAAyB,EAAI,EAAA;AAC3B,IAAA,IAAA,CAAK,MAAS,GAAA,MAAA,CAAA;AACd,IAAA,IAAA,CAAK,KAAQ,GAAA,KAAA,CAAA;AAEb,IAAA,IAAA,CAAK,WAAc,GAAA,WAAA,CAAA;AAEnB,IAAA,IAAA,CAAK,QAAW,GAAA,QAAA,CAAA;AAEhB,IAAA,IAAI,KAAK,WAAa,EAAA;AACpB,MAAO,MAAA,CAAA,gBAAA,CAAiB,QAAU,EAAA,IAAA,CAAK,SAAU,CAAA,IAAA,CAAK,IAAI,CAAG,EAAA,EAAE,OAAS,EAAA,IAAA,EAAM,CAAA,CAAA;AAAA,KAChF;AAAA,GACF;AAAA;AAAA;AAAA;AAAA,EAKA,SAAY,GAAA;AACV,IAAK,IAAA,CAAA,kBAAA,CAAmB,EAAE,CAAG,EAAA,MAAA,CAAO,aAAa,CAAG,EAAA,MAAA,CAAO,aAAa,CAAA,CAAA;AAAA,GAC1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,kBAAmB,CAAA,EAAE,CAAG,EAAA,CAAA,EAAkB,EAAA;AAExC,IAAA,MAAM,aAAa,IAAK,CAAA,MAAA,CAAA;AACxB,IAAK,IAAA,CAAA,MAAA,GAAS,EAAE,CAAA,EAAG,CAAE,EAAA,CAAA;AACrB,IAAA,IAAA,CAAK,KAAQ,GAAA;AAAA,MACX,CAAG,EAAA,UAAA,CAAW,CAAI,GAAA,IAAA,CAAK,MAAO,CAAA,CAAA;AAAA,MAC9B,CAAG,EAAA,UAAA,CAAW,CAAI,GAAA,IAAA,CAAK,MAAO,CAAA,CAAA;AAAA,KAChC,CAAA;AAEA,IAAA,IAAI,KAAK,QAAU,EAAA;AACjB,MAAK,IAAA,CAAA,QAAA,CAAS,KAAK,KAAK,CAAA,CAAA;AAAA,KAC1B;AAAA,GACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAU,GAAA;AACR,IAAA,IAAI,KAAK,WAAa,EAAA;AAGpB,MAAO,MAAA,CAAA,mBAAA,CAAoB,QAAU,EAAA,IAAA,CAAK,SAAU,CAAA,IAAA,CAAK,IAAI,CAAG,EAAA,EAAE,OAAS,EAAA,IAAA,EACrD,CAAA,CAAA;AAAA,KACxB;AAAA,GACF;AACF;;;;"}