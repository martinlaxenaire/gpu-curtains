{"version":3,"file":"CacheManager.mjs","sources":["../../../src/utils/CacheManager.ts"],"sourcesContent":["import { PlaneGeometry } from '../core/geometries/PlaneGeometry'\n\n/**\n * Used to cache {@link PlaneGeometry} and avoid as many large array computations as possible.<br>\n * Could be improved to handle other caches.\n */\nexport class CacheManager {\n  /** Array of cached {@link PlaneGeometry} */\n  planeGeometries: PlaneGeometry[]\n\n  /**\n   * CacheManager constructor\n   */\n  constructor() {\n    this.planeGeometries = []\n  }\n\n  /**\n   * Check if a given {@link PlaneGeometry} is already cached based on its {@link PlaneGeometry#definition.id | definition id}\n   * @param planeGeometry - {@link PlaneGeometry} to check\n   * @returns - {@link PlaneGeometry} found or null if not found\n   */\n  getPlaneGeometry(planeGeometry: PlaneGeometry): PlaneGeometry | null {\n    return this.planeGeometries.find((element) => element.definition.id === planeGeometry.definition.id)\n  }\n\n  /**\n   * Check if a given {@link PlaneGeometry} is already cached based on its {@link PlaneGeometry#definition | definition id}\n   * @param planeGeometryID - {@link PlaneGeometry#definition.id | PlaneGeometry definition id}\n   * @returns - {@link PlaneGeometry} found or null if not found\n   */\n  getPlaneGeometryByID(planeGeometryID: number): PlaneGeometry | null {\n    return this.planeGeometries.find((element) => element.definition.id === planeGeometryID)\n  }\n\n  /**\n   * Add a {@link PlaneGeometry} to our cache {@link planeGeometries} array\n   * @param planeGeometry\n   */\n  addPlaneGeometry(planeGeometry: PlaneGeometry) {\n    this.planeGeometries.push(planeGeometry)\n  }\n\n  /**\n   * Destroy our {@link CacheManager}\n   */\n  destroy() {\n    this.planeGeometries = []\n  }\n}\n\n/** @exports @const cacheManager - {@link CacheManager} class object */\nexport const cacheManager = new CacheManager() as CacheManager\n"],"names":[],"mappings":"AAMO,MAAM,YAAa,CAAA;AAAA;AAAA;AAAA;AAAA,EAOxB,WAAc,GAAA;AACZ,IAAA,IAAA,CAAK,kBAAkB,EAAC,CAAA;AAAA,GAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,iBAAiB,aAAoD,EAAA;AACnE,IAAO,OAAA,IAAA,CAAK,eAAgB,CAAA,IAAA,CAAK,CAAC,OAAA,KAAY,QAAQ,UAAW,CAAA,EAAA,KAAO,aAAc,CAAA,UAAA,CAAW,EAAE,CAAA,CAAA;AAAA,GACrG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,qBAAqB,eAA+C,EAAA;AAClE,IAAO,OAAA,IAAA,CAAK,gBAAgB,IAAK,CAAA,CAAC,YAAY,OAAQ,CAAA,UAAA,CAAW,OAAO,eAAe,CAAA,CAAA;AAAA,GACzF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,iBAAiB,aAA8B,EAAA;AAC7C,IAAK,IAAA,CAAA,eAAA,CAAgB,KAAK,aAAa,CAAA,CAAA;AAAA,GACzC;AAAA;AAAA;AAAA;AAAA,EAKA,OAAU,GAAA;AACR,IAAA,IAAA,CAAK,kBAAkB,EAAC,CAAA;AAAA,GAC1B;AACF,CAAA;AAGa,MAAA,YAAA,GAAe,IAAI,YAAa;;;;"}